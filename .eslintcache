[{"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\index.js":"1","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\Game.js":"2","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\ActivityTab.js":"3","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\TopBar.js":"4","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\ResourceTab.js":"5","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\TabSelector.js":"6","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Lists\\ResourcesUtilities.js":"7","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Lists\\ActivityUtilities.js":"8","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Lists\\TabList.js":"9","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Utilities\\StringsConst.js":"10","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Utilities\\UtilityFunctions.js":"11","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\Activity.js":"12","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\Resource.js":"13","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\Tooltips\\ResourceIncRatioTooltip.js":"14","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\Tooltips\\BeltResourceTooltip.js":"15","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\Tooltips\\ActivityTooltip.js":"16","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\Tooltips\\JobTooltip.js":"17","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Lists\\TalentsUtilities.js":"18","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\TalentsTab.js":"19","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\Talent.js":"20","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\Tooltips\\TalentTooltip.js":"21"},{"size":194,"mtime":1608823389459,"results":"22","hashOfConfig":"23"},{"size":4188,"mtime":1692362172917,"results":"24","hashOfConfig":"23"},{"size":1994,"mtime":1692355906104,"results":"25","hashOfConfig":"23"},{"size":2101,"mtime":1612257883487,"results":"26","hashOfConfig":"23"},{"size":1090,"mtime":1612962146805,"results":"27","hashOfConfig":"23"},{"size":1366,"mtime":1692355808754,"results":"28","hashOfConfig":"23"},{"size":5074,"mtime":1692628382123,"results":"29","hashOfConfig":"23"},{"size":6691,"mtime":1692630408455,"results":"30","hashOfConfig":"23"},{"size":826,"mtime":1692627053146,"results":"31","hashOfConfig":"23"},{"size":2885,"mtime":1692624494381,"results":"32","hashOfConfig":"23"},{"size":8083,"mtime":1692690110074,"results":"33","hashOfConfig":"23"},{"size":6402,"mtime":1692348406847,"results":"34","hashOfConfig":"23"},{"size":2583,"mtime":1692348471995,"results":"35","hashOfConfig":"23"},{"size":4335,"mtime":1692628719686,"results":"36","hashOfConfig":"23"},{"size":926,"mtime":1612870614047,"results":"37","hashOfConfig":"23"},{"size":5056,"mtime":1692631308107,"results":"38","hashOfConfig":"23"},{"size":2732,"mtime":1614003030852,"results":"39","hashOfConfig":"23"},{"size":2201,"mtime":1692690186050,"results":"40","hashOfConfig":"23"},{"size":2727,"mtime":1692690021079,"results":"41","hashOfConfig":"23"},{"size":2752,"mtime":1692608442039,"results":"42","hashOfConfig":"23"},{"size":4353,"mtime":1692608621434,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"xf42iu",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\index.js",[],["91","92"],"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\Game.js",[],"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\ActivityTab.js",["93"],"import React from 'react'\r\nimport Activity from './Activity.js'\r\n\r\nimport {checkUnlockCondition} from '../Utilities/UtilityFunctions.js'\r\nimport * as constants from '../Utilities/StringsConst.js'\r\n\r\nclass ActivityTab extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            activities: props.activities,\r\n            resources: props.resources,\r\n            talents: props.talents,\r\n            activeTab: props.activeTab\r\n        }\r\n    }\r\n\r\n    isUnlocked(activity) {\r\n\r\n        if(activity.unlocked === false && activity.unlockedFrom !== null) {\r\n            let unlockCondition = activity.unlockedFrom.slice()\r\n            let resourcesList = this.state.resources.slice()\r\n            let activityList = this.state.activities.slice()\r\n            let talentsList = this.state.talents.slice()\r\n\r\n            let unlockable = checkUnlockCondition(resourcesList, activityList, unlockCondition)\r\n\r\n            if(unlockable) {\r\n                activity.unlocked = true\r\n            }\r\n        }\r\n        return activity.unlocked\r\n    }\r\n\r\n    componentWillReceiveProps({activeTab}) {\r\n        this.setState({\r\n            activeTab: activeTab\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let activities = this.state.activities.slice()\r\n        let resources = this.state.resources.slice()\r\n\r\n        return (\r\n            <div className=\"Middle-Panel-Activity-Tab\" style={{'display': this.state.activeTab === constants.TAB_001 ? 'block' : 'none'}}>\r\n                {activities.map(activity => (                  \r\n                    this.isUnlocked(activity) && (\r\n                        <div className=\"Middle-Panel-Activity-Container\" > \r\n                            <Activity updateResources={this.props.updateResources} activity={activity} resources={resources} />\r\n                        </div>\r\n                    )             \r\n                ))}     \r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default ActivityTab;","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\TopBar.js",[],"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\ResourceTab.js",[],"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\TabSelector.js",["94"],"import React from 'react'\r\nimport {checkUnlockCondition} from '../Utilities/UtilityFunctions.js'\r\n\r\nclass TabSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      tab: props.tab,\r\n      isActive: props.isActive,\r\n      resources: props.resources,\r\n      activities: props.activities,\r\n      talents: props.talents\r\n    }\r\n  }\r\n\r\n  isUnlocked() {\r\n    let tab = this.state.tab\r\n    let resources = this.state.resources.slice()\r\n    let activities = this.state.activities.slice()\r\n    let talents = this.state.talents.slice()\r\n    \r\n    if(tab.unlocked === false) {\r\n      let unlockCondition = tab.unlockedFrom.slice()\r\n      \r\n      let unlockable = checkUnlockCondition(resources, activities, unlockCondition)\r\n\r\n      if(unlockable) {\r\n        tab.unlocked = true\r\n      }\r\n    }\r\n\r\n    return tab.unlocked\r\n  }\r\n\r\n  render() {\r\n    let tab = this.state.tab\r\n\r\n    return(\r\n      <span>\r\n        {this.isUnlocked() && (<span>\r\n          <span className=\"Middle-Panel-Tab-Name\" \r\n                style={{'font-weight': this.props.isActive ? 'bold' : 'normal'}} \r\n                onClick={() => this.props.updateActiveTab(tab.name)}\r\n          >\r\n                  {tab.name}\r\n          </span>       \r\n          <span> / </span>\r\n        </span>)} \r\n      </span>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default TabSelector;\r\n\r\n","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Lists\\ResourcesUtilities.js",[],"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Lists\\ActivityUtilities.js",[],"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Lists\\TabList.js",[],"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Utilities\\StringsConst.js",[],"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Utilities\\UtilityFunctions.js",[],"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\Activity.js",["95"],"import React from 'react'\r\nimport ActivityTooltip from './Tooltips/ActivityTooltip.js'\r\nimport {haveEnoughResource} from '../Utilities/UtilityFunctions.js'\r\nimport {applyEffectsToResources} from '../Lists/ResourcesUtilities.js'\r\nimport {formatNumber, formatNumberWPrefix} from '../Utilities/UtilityFunctions.js'\r\n\r\nclass Activity extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      activity: props.activity,\r\n      resources: props.resources\r\n    }\r\n  }\r\n\r\n\r\n  getActivityBtnClass(costs, resources) {\r\n    // if the activity can be upgraded, then the button its more visible\r\n    let cssClass = \"Activity-Btn\"\r\n    if(costs != null) {\r\n      if(haveEnoughResource(costs, resources)) {\r\n        cssClass = \"Activity-Btn Upgradable\"\r\n      }\r\n    }\r\n    else {\r\n      cssClass = \"Activity-Btn Upgradable\"\r\n    }\r\n    \r\n    return cssClass\r\n  }\r\n\r\n  buyActivity(costs) {\r\n    var activityToDo = this.state.activity //one activity\r\n    var resourcesList = this.state.resources\r\n      \r\n    var upgradable = true \r\n    var havetoPay = false\r\n\r\n    if(costs != null) { // if the activity have costs, then check if the resource are enough\r\n      upgradable = haveEnoughResource(costs, resourcesList)\r\n      havetoPay = true\r\n    }\r\n\r\n    if(upgradable) { //if the resource are enough\r\n      let effects = activityToDo.effect.slice()\r\n\r\n      //paying resources and update the next cost if necessary\r\n      if(havetoPay) {\r\n        for(let i=0; i < resourcesList.length;i++) { //for each resource\r\n\r\n          let index = costs.findIndex(x => x.resource === resourcesList[i].name) //find the matching cost\r\n          if(index !== -1) { //if matching cost found\r\n            resourcesList[i].currentValue -= costs[index].cost  //paying resource\r\n            if(activityToDo.upgradeCost != null) //if its an upgradable resource, then update the cost value for the next step\r\n              costs[index].cost += (costs[index].upgradeCostRatio * costs[index].cost)\r\n          } \r\n        }\r\n      }\r\n      \r\n      //Apply effects to the resources  \r\n      applyEffectsToResources(resourcesList, effects, 1, \"add\", \"activity\")\r\n\r\n      //Upgrade the stage\r\n      if (activityToDo.stage != null) \r\n        activityToDo.stage += 1\r\n\r\n      //Upgrade the grade  \r\n      if(activityToDo.modulable != null) \r\n        activityToDo.grade += 1\r\n        \r\n      this.setState ({\r\n        gameResources: resourcesList,\r\n        activity: activityToDo\r\n      })\r\n    }\r\n  }\r\n\r\n  /*sellActivity() {\r\n    let activityToSell = this.state.activity\r\n    let resources = this.state.resources\r\n    \r\n\r\n    if(activityToSell.stage != null && activityToSell.stage > 0) {\r\n      let costs = activityToSell.upgradeCost.slice()\r\n      let effects = activityToSell.effect.slice()\r\n\r\n      costs.forEach(cost => {\r\n        let index = resources.findIndex(x => x.name === cost.resource)  \r\n        cost.cost -= ((cost.upgradeCostRatio * cost.cost * (activityToSell.stage)))\r\n        resources[index].currentValue += cost.cost  \r\n      })\r\n      \r\n      if((activityToSell.modulable === true && activityToSell.grade >0) || activityToSell.modulable === false) \r\n        applyEffectsToResources(resources, effects, 1, \"remove\", \"activity\") \r\n\r\n      if(activityToSell.modulable === true) {\r\n        if(activityToSell.grade === activityToSell.stage) {\r\n          activityToSell.grade -= 1\r\n        }\r\n      }\r\n      \r\n      activityToSell.stage -= 1\r\n      \r\n\r\n      this.setState ({\r\n        resources: resources,\r\n        activity: activityToSell\r\n      })\r\n    }\r\n\r\n  }*/\r\n\r\n  upGrade() {\r\n    let activity = this.state.activity\r\n    let resources = this.state.resources.slice()\r\n    let effects = activity.effect.slice()\r\n\r\n    if(activity.grade < activity.stage) {\r\n      activity.grade += 1\r\n\r\n      applyEffectsToResources(resources,effects,1,\"add\", \"activity\")\r\n\r\n      this.setState ({\r\n        gameResources: resources,\r\n        activity: activity\r\n      })\r\n    }\r\n  }\r\n\r\n  downGrade() {\r\n    let activity = this.state.activity\r\n    let resources = this.state.resources\r\n    let effects = activity.effect.slice()\r\n\r\n    if(activity.grade > 0) {\r\n      activity.grade -= 1\r\n\r\n      applyEffectsToResources(resources,effects,1,\"remove\",\"activity\")\r\n\r\n      this.setState ({\r\n        gameResources: resources,\r\n        activity: activity\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    let activity = this.state.activity\r\n    let resources = this.state.resources\r\n    let costs = null\r\n\r\n    if(activity.upgradeCost != null)\r\n      costs = activity.upgradeCost\r\n    if(activity.clickCost != null)\r\n      costs = activity.clickCost\r\n\r\n      return(\r\n        <ActivityTooltip activity={activity} resourcesList={resources} direction=\"right\">\r\n          <span onClick={() => this.buyActivity(costs)} className={this.getActivityBtnClass(costs,resources)}> \r\n\r\n            <span className=\"Activity-Btn-Label\">{activity.name} {activity.stage != null && (<span>Lv. {activity.modulable && (<span>{activity.grade}/</span>)}{activity.stage}</span>)}</span>\r\n            <span className=\"Activity-Btn-CostContainer\">\r\n            {activity.upgradeCost && (activity.upgradeCost.map(upgradeCost => (             \r\n              <span className=\"Activity-Btn-CostRow\">\r\n                <b>{upgradeCost.resource}</b> required\r\n                {resources.map(resource => (resource.name === upgradeCost.resource && (\r\n                    <span> {[formatNumber(upgradeCost.cost,2)]}</span>)                \r\n                ))} \r\n                <br></br>\r\n              </span>                         \r\n            )))}\r\n            {!activity.upgradeCost && (\r\n              <span className=\"Activity-Btn-CostRow\"> Free </span>\r\n            )}\r\n            </span>\r\n            {/*activity.stage != null && (<button onClick={(e) => {e.stopPropagation(); this.sellActivity()}} className=\"Activity-Btn-Sell\">Sell</button>)*/}\r\n            \r\n            {activity.modulable === true && (\r\n              <span>\r\n                <button onClick={(e) => {e.stopPropagation(); this.upGrade()}} className=\"Activity-Btn-Grade Plus\">+</button>\r\n                <button onClick={(e) => {e.stopPropagation(); this.downGrade()}} className=\"Activity-Btn-Grade Minus\">-</button>\r\n              </span>\r\n            )}\r\n\r\n          </span>       \r\n        </ActivityTooltip>    \r\n      )\r\n    }\r\n}\r\n\r\nexport default Activity;\r\n\r\n","C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\Resource.js",[],"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\Tooltips\\ResourceIncRatioTooltip.js",[],"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\Tooltips\\BeltResourceTooltip.js",[],["96","97"],"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\Tooltips\\ActivityTooltip.js",[],"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\Tooltips\\JobTooltip.js",[],"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Lists\\TalentsUtilities.js",[],"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\TalentsTab.js",[],"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\Talent.js",[],"C:\\Users\\stefano.quaglietti.METHODO\\Documents\\myapp\\myapp\\src\\Components\\Tooltips\\TalentTooltip.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":24,"column":17,"nodeType":"104","messageId":"105","endLine":24,"endColumn":28},{"ruleId":"102","severity":1,"message":"106","line":20,"column":9,"nodeType":"104","messageId":"105","endLine":20,"endColumn":16},{"ruleId":"102","severity":1,"message":"107","line":5,"column":23,"nodeType":"104","messageId":"105","endLine":5,"endColumn":42},{"ruleId":"98","replacedBy":"108"},{"ruleId":"100","replacedBy":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'talentsList' is assigned a value but never used.","Identifier","unusedVar","'talents' is assigned a value but never used.","'formatNumberWPrefix' is defined but never used.",["110"],["111"],"no-global-assign","no-unsafe-negation"]